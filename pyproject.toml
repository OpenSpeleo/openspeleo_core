[build-system]
requires = ["maturin>=1.8,<1.9"]
build-backend = "maturin"

[tool.maturin]
python-source = "python"
module-name = "openspeleo_core._lib"
bindings = "pyo3"
features = ["pyo3/extension-module"]


[project]
name = "openspeleo_core"
version = "0.0.1"
description = "A Rust backend library aiming to provide high performance implementations for OpenSpeleo project."
authors = [{ name = "Jonathan Dekhtiar", email = "jonathan@dekhtiar.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "check-manifest",
    # Pre Commit Hooks
    "pre-commit>=4.1,<4.2",
    # Linting
    "ruff>=0.3,<0.12",
]
test = [
    "deepdiff>=7.0,<9.0",
    "hypothesis>=6.128,<6.129",
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=5.0.0,<7.0.0",
    "pytest-dotenv>=0.5.0,<1.0.0",
    "pytest-env>=1.1.3,<2.0.0",
    "pytest-runner>=6.0.0,<7.0.0",
    "pytest-ordering>=0.6,<1.0.0",
    "parameterized>=0.9.0,<0.10",
    "xmltodict>=0.14,<0.15",
]

[project.scripts]
openspeleo_core = "openspeleo_core.commands.main:main"

[project.entry-points."openspeleo_core.actions"]
convert = "openspeleo_core.commands.convert:convert"


[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = "-vvv --cov=openspeleo_core --cov-report=term-missing"
# addopts = "-vvv --cov=openspeleo_core --cov-report=term-missing --capture=no"
